// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_INCLUDED_test_2eproto
#define PROTOBUF_INCLUDED_test_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto 

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_test_2eproto
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
namespace google {
namespace protobuf {
template<> ::Response* Arena::CreateMaybeMessage<::Response>(Arena*);
}  // namespace protobuf
}  // namespace google

enum Response_Status {
  Response_Status_INVALID = 0,
  Response_Status_START_POWEROFF = 1,
  Response_Status_PROCESS_POWEROFF = 2,
  Response_Status_CANCLE_POWEROFF = 3,
  Response_Status_SUCCESS = 4,
  Response_Status_FAILED = 5,
  Response_Status_Response_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Response_Status_Response_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Response_Status_IsValid(int value);
const Response_Status Response_Status_Status_MIN = Response_Status_INVALID;
const Response_Status Response_Status_Status_MAX = Response_Status_FAILED;
const int Response_Status_Status_ARRAYSIZE = Response_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_Status_descriptor();
inline const ::std::string& Response_Status_Name(Response_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_Status_descriptor(), value);
}
inline bool Response_Status_Parse(
    const ::std::string& name, Response_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_Status>(
    Response_Status_descriptor(), name, value);
}
enum Response_FailReason {
  Response_FailReason_NONE = 0,
  Response_FailReason_GEAR_STATE = 1,
  Response_FailReason_SPEED = 2,
  Response_FailReason_EPB = 3,
  Response_FailReason_DESTINATIONS = 4,
  Response_FailReason_AUTO_MODE = 5,
  Response_FailReason_Response_FailReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Response_FailReason_Response_FailReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Response_FailReason_IsValid(int value);
const Response_FailReason Response_FailReason_FailReason_MIN = Response_FailReason_NONE;
const Response_FailReason Response_FailReason_FailReason_MAX = Response_FailReason_AUTO_MODE;
const int Response_FailReason_FailReason_ARRAYSIZE = Response_FailReason_FailReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_FailReason_descriptor();
inline const ::std::string& Response_FailReason_Name(Response_FailReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_FailReason_descriptor(), value);
}
inline bool Response_FailReason_Parse(
    const ::std::string& name, Response_FailReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_FailReason>(
    Response_FailReason_descriptor(), name, value);
}
// ===================================================================

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Response_Status Status;
  static const Status INVALID =
    Response_Status_INVALID;
  static const Status START_POWEROFF =
    Response_Status_START_POWEROFF;
  static const Status PROCESS_POWEROFF =
    Response_Status_PROCESS_POWEROFF;
  static const Status CANCLE_POWEROFF =
    Response_Status_CANCLE_POWEROFF;
  static const Status SUCCESS =
    Response_Status_SUCCESS;
  static const Status FAILED =
    Response_Status_FAILED;
  static inline bool Status_IsValid(int value) {
    return Response_Status_IsValid(value);
  }
  static const Status Status_MIN =
    Response_Status_Status_MIN;
  static const Status Status_MAX =
    Response_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    Response_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return Response_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return Response_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return Response_Status_Parse(name, value);
  }

  typedef Response_FailReason FailReason;
  static const FailReason NONE =
    Response_FailReason_NONE;
  static const FailReason GEAR_STATE =
    Response_FailReason_GEAR_STATE;
  static const FailReason SPEED =
    Response_FailReason_SPEED;
  static const FailReason EPB =
    Response_FailReason_EPB;
  static const FailReason DESTINATIONS =
    Response_FailReason_DESTINATIONS;
  static const FailReason AUTO_MODE =
    Response_FailReason_AUTO_MODE;
  static inline bool FailReason_IsValid(int value) {
    return Response_FailReason_IsValid(value);
  }
  static const FailReason FailReason_MIN =
    Response_FailReason_FailReason_MIN;
  static const FailReason FailReason_MAX =
    Response_FailReason_FailReason_MAX;
  static const int FailReason_ARRAYSIZE =
    Response_FailReason_FailReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FailReason_descriptor() {
    return Response_FailReason_descriptor();
  }
  static inline const ::std::string& FailReason_Name(FailReason value) {
    return Response_FailReason_Name(value);
  }
  static inline bool FailReason_Parse(const ::std::string& name,
      FailReason* value) {
    return Response_FailReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .Response.Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::Response_Status status() const;
  void set_status(::Response_Status value);

  // uint32 wait_time = 2;
  void clear_wait_time();
  static const int kWaitTimeFieldNumber = 2;
  ::google::protobuf::uint32 wait_time() const;
  void set_wait_time(::google::protobuf::uint32 value);

  // .Response.FailReason fail_reson = 3;
  void clear_fail_reson();
  static const int kFailResonFieldNumber = 3;
  ::Response_FailReason fail_reson() const;
  void set_fail_reson(::Response_FailReason value);

  // bool door_opened = 4;
  void clear_door_opened();
  static const int kDoorOpenedFieldNumber = 4;
  bool door_opened() const;
  void set_door_opened(bool value);

  // @@protoc_insertion_point(class_scope:Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  ::google::protobuf::uint32 wait_time_;
  int fail_reson_;
  bool door_opened_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Response

// .Response.Status status = 1;
inline void Response::clear_status() {
  status_ = 0;
}
inline ::Response_Status Response::status() const {
  // @@protoc_insertion_point(field_get:Response.status)
  return static_cast< ::Response_Status >(status_);
}
inline void Response::set_status(::Response_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:Response.status)
}

// uint32 wait_time = 2;
inline void Response::clear_wait_time() {
  wait_time_ = 0u;
}
inline ::google::protobuf::uint32 Response::wait_time() const {
  // @@protoc_insertion_point(field_get:Response.wait_time)
  return wait_time_;
}
inline void Response::set_wait_time(::google::protobuf::uint32 value) {
  
  wait_time_ = value;
  // @@protoc_insertion_point(field_set:Response.wait_time)
}

// .Response.FailReason fail_reson = 3;
inline void Response::clear_fail_reson() {
  fail_reson_ = 0;
}
inline ::Response_FailReason Response::fail_reson() const {
  // @@protoc_insertion_point(field_get:Response.fail_reson)
  return static_cast< ::Response_FailReason >(fail_reson_);
}
inline void Response::set_fail_reson(::Response_FailReason value) {
  
  fail_reson_ = value;
  // @@protoc_insertion_point(field_set:Response.fail_reson)
}

// bool door_opened = 4;
inline void Response::clear_door_opened() {
  door_opened_ = false;
}
inline bool Response::door_opened() const {
  // @@protoc_insertion_point(field_get:Response.door_opened)
  return door_opened_;
}
inline void Response::set_door_opened(bool value) {
  
  door_opened_ = value;
  // @@protoc_insertion_point(field_set:Response.door_opened)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Response_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Response_Status>() {
  return ::Response_Status_descriptor();
}
template <> struct is_proto_enum< ::Response_FailReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Response_FailReason>() {
  return ::Response_FailReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_test_2eproto
